// Automatically generated by MockGen. DO NOT EDIT!
// Source: auth/4_ext_usercredentials_I.go

package auth

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of UserCredentials_I interface
type MockUserCredentials_I struct {
	ctrl     *gomock.Controller
	recorder *_MockUserCredentials_IRecorder
}

// Recorder for MockUserCredentials_I (not exported)
type _MockUserCredentials_IRecorder struct {
	mock *MockUserCredentials_I
}

func NewMockUserCredentials_I(ctrl *gomock.Controller) *MockUserCredentials_I {
	mock := &MockUserCredentials_I{ctrl: ctrl}
	mock.recorder = &_MockUserCredentials_IRecorder{mock}
	return mock
}

func (_m *MockUserCredentials_I) EXPECT() *_MockUserCredentials_IRecorder {
	return _m.recorder
}

func (_m *MockUserCredentials_I) UserId() UserId {
	ret := _m.ctrl.Call(_m, "UserId")
	ret0, _ := ret[0].(UserId)
	return ret0
}

func (_mr *_MockUserCredentials_IRecorder) UserId() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UserId")
}

func (_m *MockUserCredentials_I) verify(userStorage UserDb_I) error {
	ret := _m.ctrl.Call(_m, "verify", userStorage)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockUserCredentials_IRecorder) verify(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "verify", arg0)
}
