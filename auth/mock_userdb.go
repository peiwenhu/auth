// Automatically generated by MockGen. DO NOT EDIT!
// Source: auth/3_ext_userdb_I.go

package auth

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of UserDb_I interface
type MockUserDb_I struct {
	ctrl     *gomock.Controller
	recorder *_MockUserDb_IRecorder
}

// Recorder for MockUserDb_I (not exported)
type _MockUserDb_IRecorder struct {
	mock *MockUserDb_I
}

func NewMockUserDb_I(ctrl *gomock.Controller) *MockUserDb_I {
	mock := &MockUserDb_I{ctrl: ctrl}
	mock.recorder = &_MockUserDb_IRecorder{mock}
	return mock
}

func (_m *MockUserDb_I) EXPECT() *_MockUserDb_IRecorder {
	return _m.recorder
}

func (_m *MockUserDb_I) GetFields(userid UserId, fields []UserFieldName) (map[UserFieldName]interface{}, error) {
	ret := _m.ctrl.Call(_m, "GetFields", userid, fields)
	ret0, _ := ret[0].(map[UserFieldName]interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockUserDb_IRecorder) GetFields(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetFields", arg0, arg1)
}

func (_m *MockUserDb_I) UpdateUser(userid UserId, fields map[UserFieldName]interface{}) error {
	ret := _m.ctrl.Call(_m, "UpdateUser", userid, fields)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockUserDb_IRecorder) UpdateUser(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UpdateUser", arg0, arg1)
}

func (_m *MockUserDb_I) CreateUser(userid UserId, name string, hashedPassword []byte, priv PVL, otherFields map[UserFieldName]interface{}) error {
	ret := _m.ctrl.Call(_m, "CreateUser", userid, name, hashedPassword, priv, otherFields)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockUserDb_IRecorder) CreateUser(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateUser", arg0, arg1, arg2, arg3, arg4)
}

func (_m *MockUserDb_I) GetRefreshToken(userid UserId, clientId string) (*string, error) {
	ret := _m.ctrl.Call(_m, "GetRefreshToken", userid, clientId)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockUserDb_IRecorder) GetRefreshToken(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetRefreshToken", arg0, arg1)
}

func (_m *MockUserDb_I) SetRefreshToken(userid UserId, clientId string, refreshToken string) error {
	ret := _m.ctrl.Call(_m, "SetRefreshToken", userid, clientId, refreshToken)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockUserDb_IRecorder) SetRefreshToken(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetRefreshToken", arg0, arg1, arg2)
}
